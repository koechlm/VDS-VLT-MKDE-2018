<?xml version="1.0" encoding="utf-8"?>

<WPF:MainWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:WPF="clr-namespace:CreateObject.WPF;assembly=CreateObject"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
                x:Name="FolderWindow"
                Background="#F0F0F0" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ComboBox ItemsSource="{Binding ListValues}"
                                  Text="{WPF:ValidatedBinding Value, StringFormat=N}" IsEditable="True" BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <DataTrigger Binding="{Binding EnforceListValues}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ListValues.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" CharacterCasing="{Binding Case}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value, ConverterCulture=de-DE}" SelectedDateFormat="Short"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Bool">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                    <ComboBoxItem Content="True" />
                                    <ComboBoxItem Content="False" />
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Name}" Value="Kunde">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ComboBox ItemsSource="{Binding ListValues}" IsEditable="True" Text="{WPF:ValidatedBinding Value}" 
                                            HorizontalAlignment="Stretch" BorderThickness="0" 
                                             ToolTipService.ShowOnDisabled="True" 
                                            ToolTip="{Binding DataContext.UIString[ADSK-LinkTab-07], FallbackValue='Select from list or links', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            IsTabStop="False" IsHitTestVisible="True" Padding="5,0,0,5"/>
                                        <Button Content="{Binding DataContext.UIString[], FallbackValue=My Command, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Command="{Binding DataContext.PsCmd[mOrgLookUpClick], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                            ToolTip="{Binding DataContext.UIString[ADSK-LinkTab-06], FallbackValue='Select organisation from available links', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Grid.Column="1" Padding="5,0" Background="#FFDDDDDD" MinWidth="30">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Image x:Name="imgTemplateReset" Source="C:\ProgramData\Autodesk\Vault 2018\Extensions\DataStandard\Vault.Custom\factory-info.ico" Margin="2" />
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </Grid>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Ansprechpartner">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{WPF:ValidatedBinding Value}" HorizontalAlignment="Stretch" BorderThickness="0" 
                                             Background="WhiteSmoke" ToolTipService.ShowOnDisabled="True" 
                                            ToolTip="{Binding DataContext.UIString[ADSK-LinkTab-08], FallbackValue='Link customer to fill automatically', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            IsTabStop="False" IsHitTestVisible="True" Padding="5,0,0,5"/>
                                        </Grid>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

            </Style.Triggers>
        </Style>
        <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Height" Value="Auto" />
            <!--<Setter Property="Margin" Value="0,4,0,0" />-->
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="1,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="#ff0000" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1,1,1,1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="25.5" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="NumSchmCtrlStyle" TargetType="{x:Type WPF:DSNumSchemeCtrl}">
            <Setter Property="Height" Value="Auto" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0,15,2,5" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <WPF:MainWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(600)]}"/>
    </WPF:MainWindow.InputBindings>
    <Grid x:Name="grdMain" Margin="5">
        <TabControl x:Name="tabCtrlMain">
            <TabItem x:Name="tabFldrProps" Header="{Binding UIString[ADSK-LinkTab-01], FallbackValue='Folder Properties'}">
                <Grid x:Name="grdFldr" Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="grdSystemProps" ToolTip="{Binding UIString[LBL73], FallbackValue=General Properties}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="120" />
                            <ColumnDefinition MinWidth="140" MaxWidth="220" />
                        </Grid.ColumnDefinitions>
                        <Label Content="{Binding UIString[LBL8], FallbackValue=Categories}" Grid.Row="0" Grid.Column="0" />
                        <ComboBox x:Name="Categories" Grid.Row="0" Grid.Column="1"
                    DisplayMemberPath="Name" SelectedItem="{Binding DynamicPropertiesCategory}"
                    SelectedValuePath="Name" SelectedValue="{Binding Prop[_Category].Value}"
                    ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
                    IsEnabled="{Binding CreateMode}" />
                        <Label x:Name="lblNumSchm" Content="{Binding UIString[LBL10], FallbackValue=Numberingscheme}"
                    Visibility="{Binding Visibility, ElementName=NumSchms}" Grid.Row="1" />
                        <ComboBox x:Name="NumSchms" Grid.Row="1" Grid.Column="1"
                    DisplayMemberPath="Name"
                    SelectedValuePath="Name"
                    SelectedValue="{Binding Prop[_NumSchm].Value}"
                    ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}"
                    IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
                    Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <Label x:Name="lblProjectNumber" Grid.Column="0" Content="{Binding UIString[LBL31], FallbackValue=Number}"
                    Grid.Row="2" Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" Height="Auto" />
                        <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" Style="{StaticResource NumSchmCtrlStyle}"
                    IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
                    Scheme="{Binding SelectedItem, ElementName=NumSchms}"
                    Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                    GeneratedNumberProperty="_GeneratedNumber" Grid.Row="2" Grid.Column="1" />
                        <Label Content="{Binding UIString[LBL19], FallbackValue=Name}" Grid.Column="0" Grid.Row="3"
                    Visibility="{Binding Visibility, ElementName=FOLDERNAME}" />
                        <TextBox Text="{WPF:ValidatedBinding Name}" x:Name="FOLDERNAME" 
                    IsReadOnly="{Binding EditMode}"
                    Style="{StaticResource Required}"
                    Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}" 
                    Grid.Column="1" Grid.Row="3" />
                        <Label Content="{Binding UIString[LBL4], FallbackValue=State}" Grid.Column="0" Grid.Row="4" />
                        <TextBox Text="{Binding Prop[_XLTN_STATE].Value}" Grid.Column="1" Grid.Row="4" IsReadOnly="True"
                    IsTabStop="False" Height="Auto" />
                        <Label Content="{Binding UIString[LBL33], FallbackValue=Date Created}" Grid.Column="0" Grid.Row="5" />
                        <TextBox Text="{Binding Prop[_XLTN_CREATE DATE].Value, StringFormat=dd/MM/yyyy}" Grid.Column="1"
                    Grid.Row="5" IsReadOnly="True" IsTabStop="False" Height="Auto" />
                        <Label Content="{Binding UIString[LBL34], FallbackValue=Created By}" Grid.Column="0" Grid.Row="6"
                    BorderThickness="1" />
                        <TextBox Text="{Binding Prop[_XLTN_CREATED BY].Value}" Grid.Column="1" Grid.Row="6" IsReadOnly="True"
                    BorderThickness="0,1,1,1" IsTabStop="False" Height="Auto" />
                    </Grid>
                    <DataGrid Grid.Column="1" x:Name="DSDynCatPropGrid" MaxHeight="350"
                ItemsSource="{Binding DynamicProperties}"
                ToolTip="{Binding UIString[LBL63], FallbackValue=Category Properties}"
                AutoGenerateColumns="False"
                HeadersVisibility="Column"
                ScrollViewer.CanContentScroll="True"
                HorizontalGridLinesBrush="WhiteSmoke"
                VerticalGridLinesBrush="WhiteSmoke" BorderBrush="Gray" MaxWidth="380"
                Margin="5,0,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Name}" CellStyle="{StaticResource DynamicDataGridLabelStyle}"
                        MinWidth="140" Width="Auto" IsReadOnly="True">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                    Text="{Binding DataContext.UIString[LBL64], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Value}" Width="*"
                        CellStyle="{StaticResource DynamicDataGridCellStyle}" IsReadOnly="True">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                    Text="{Binding DataContext.UIString[LBL65], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grdComments" Grid.ColumnSpan="2" Grid.Row="1" Margin="0,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lblComments" Content="{Binding UIString[LBL7], FallbackValue=Comments}" Height="Auto" BorderThickness="1,1,0,1" VerticalAlignment="Top"/>
                        <TextBox x:Name="txtComments" Text="{Binding Prop[_XLTN_COMMENTS].Value}" Height="Auto" TextWrapping="Wrap" MinHeight="62" BorderThickness="1" Grid.Column="1" AcceptsReturn="True" AcceptsTab="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" VerticalContentAlignment="Top"/>
                    </Grid>
                    <Grid x:Name="ButtonGrid" Grid.ColumnSpan="2" Grid.Row="2" Style="{StaticResource ButtonGridStyle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnOK" Content="{Binding UIString[BTN1], FallbackValue=OK}"
                    Command="{Binding CloseWindowCommand, ElementName=FolderWindow}"
                    IsEnabled="{Binding IsNotReadonly}" Grid.Column="2" Width="80" Height="24" IsDefault="True" />
                        <Button x:Name="btnEsc" Content="{Binding UIString[BTN2], FallbackValue=Esc}"
                    Command="{Binding CancelWindowCommand, ElementName=FolderWindow}" Grid.Column="4" Width="80"
                    HorizontalAlignment="Right" Height="24" IsCancel="True" />
                        <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                    Command="{Binding PsCmd[mHelp(600)]}" Height="24" ToolTip="F1" Margin="0" Width="80" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabFldLinks" Header="{Binding UIString[ADSK-LinkTab-00], FallbackValue='Links'}" MinWidth="80">
                <Grid Height="282" Width="645" Background="#FFF0F0F0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Background="#FFF0F0F0" Width="{Binding ActualWidth, ElementName=grid, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=grid, Mode=OneWay}" MinWidth="{Binding ActualWidth, ElementName=grdFldr, Mode=OneWay}" MinHeight="{Binding ActualHeight, ElementName=grdFldr, Mode=OneWay}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="140"/>
                            <ColumnDefinition MaxWidth="200"/>
                        </Grid.ColumnDefinitions>
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding PsCmd[mOrgLinkActivate]}" Header="{Binding UIString[ADSK-LinkTab-02], FallbackValue='Activate Link Creation'}" ToolTip="{Binding UIString[ADSK-LinkTab-04]}"/>
                            </ContextMenu>
                        </Grid.ContextMenu>
                        <Label x:Name="lblOrganisation" Content="{Binding UIString[MSDCE_LBL82], FallbackValue=Organisation}" Visibility="{Binding Visibility, ElementName=cmbOrganisation}"/>
                        <ComboBox x:Name="cmbOrganisation" Grid.Column="1"/>

                        <Label x:Name="lblPerson" Content="{Binding UIString[], FallbackValue=Person}" Visibility="{Binding Visibility, ElementName=cmbPerson}" Grid.Row="1" BorderThickness="1"/>
                        <ComboBox x:Name="cmbPerson" Grid.Row="1" Grid.Column="1" BorderThickness="0,1,1,1"/>
                    </Grid>
                    <Grid x:Name="grdButtons" Grid.Row="4" Margin="0,10" Background="#FFF0F0F0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="btnActivate" Command="{Binding PsCmd[mOrgLinkActivate]}" 
                            Content="{Binding UIString[ADSK-LinkTab-02], FallbackValue='Activate Link Creation'}"                             
                            HorizontalAlignment="Right" Width="140" IsEnabled="False" Height="24" 
                            ToolTip="{Binding UIString[ADSK-LinkTab-04],FallbackValue='Activate Company/Contact Link Creation'}" Grid.Column="2" Margin="5,0"/>
                        <Button x:Name="btnOrgLinkReset" Command="{Binding PsCmd[mOrgLinkReset]}" 
                            Content="{Binding UIString[ADSK-LinkTab-03], FallbackValue=Reset Link Creation}"                             
                            HorizontalAlignment="Right" Width="140" IsEnabled="False" Height="24" 
                            ToolTip="{Binding UIString[ADSK-LinkTab-05], FallbackValue=Disable Company/Contact Link Creation}" Grid.Column="1" Margin="5,0"/>
                    </Grid>

                </Grid>


            </TabItem>
        </TabControl>
    </Grid>
</WPF:MainWindow>