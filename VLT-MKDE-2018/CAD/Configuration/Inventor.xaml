<?xml version="1.0" encoding="utf-8"?>

<WPF:DSWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:WPF="clr-namespace:dataStandard.UI.View;assembly=dataStandard.UI"
              xmlns:system="clr-namespace:System;assembly=mscorlib"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
              x:Name="InventorWindow" WindowStyle="ToolWindow" ShowInTaskbar="False" Topmost="True"
              Background="#F0F0F0" ResizeMode="NoResize" SizeToContent="WidthAndHeight">
    <WPF:DSWindow.Resources>
        <Style x:Key="DynamicDataGridCellStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value, StringFormat=N}"
                                  IsEditable="True" BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
                </Trigger>
                <DataTrigger Binding="{Binding EnforceListValues}" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding ListValues.Count}" Value="0">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBox Text="{WPF:ValidatedBinding Value, StringFormat=N}" BorderThickness="0" 
                                         CharacterCasing="{Binding Case}" Padding="5,0,0,5"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="DateTime">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DatePicker SelectedDate="{WPF:ValidatedBinding Value, ConverterCulture=de-DE}" SelectedDateFormat="Short" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Typ}" Value="Boolean">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox Text="{WPF:ValidatedBinding Value}" IsEditable="True">
                                    <ComboBoxItem Content="True" />
                                    <ComboBoxItem Content="False" />
                                </ComboBox>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Material">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ComboBox ItemsSource="{Binding ListValues}" Text="{WPF:ValidatedBinding Value}"
                                  IsEditable="False" BorderThickness="0" Padding="5,0,0,5" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Title">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{WPF:ValidatedBinding Value}" HorizontalAlignment="Stretch" BorderThickness="0" 
                                            IsReadOnly="False" Background="WhiteSmoke" ToolTipService.ShowOnDisabled="True" 
                                            ToolTip="{Binding DataContext.UIString[ClassTerms_TT04], FallbackValue=No hand typed values\, select from Catalog..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            IsTabStop="False" IsHitTestVisible="True" Padding="5,0,0,5"/>
                                        <Button Content="{Binding DataContext.UIString[ClassTerms_13], FallbackValue=Catalog..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Command="{Binding DataContext.PsCmd[mCatalogClick], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                            ToolTip="{Binding DataContext.UIString[ClassTerms_TT05], FallbackValue=No hand typed values\, select from Catalog..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="10,1" Background="#FFDDDDDD" MinWidth="100"/>
                                    </Grid>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Part Number">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{WPF:ValidatedBinding Value}" HorizontalAlignment="Stretch" BorderThickness="0" 
                                            IsReadOnly="True" Background="WhiteSmoke" ToolTipService.ShowOnDisabled="True" 
                                            ToolTip="{Binding DataContext.UIString[LBL27], FallbackValue='No hand typed values select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            IsTabStop="False" IsHitTestVisible="True" Padding="5,0,0,5"/>
                                        <Button Content="{Binding DataContext.UIString[ADSK-ItemTab-04], FallbackValue=Lookup..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Command="{Binding DataContext.PsCmd[mItemLookupClick1], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                            ToolTip="{Binding DataContext.UIString[ADSK-ItemTab-05], FallbackValue=No hand typed values\, select from Catalog..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="10,1" Background="#FFDDDDDD" MinWidth="100"/>
                                    </Grid>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Halbzeug">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{WPF:ValidatedBinding Value}" HorizontalAlignment="Stretch" BorderThickness="0" 
                                            IsReadOnly="False" Background="WhiteSmoke" ToolTipService.ShowOnDisabled="True" 
                                            ToolTip="{Binding DataContext.UIString[LBL27], FallbackValue='No hand typed values select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            IsTabStop="False" IsHitTestVisible="True" Padding="5,0,0,5"/>
                                        <Button Content="{Binding DataContext.UIString[ADSK-ItemTab-04], FallbackValue=Lookup..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Command="{Binding DataContext.PsCmd[mItemLookupClick2], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                            ToolTip="{Binding DataContext.UIString[ADSK-ItemTab-05], FallbackValue=No hand typed values\, select from Catalog..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="10,1" Background="#FFDDDDDD" MinWidth="100"/>
                                    </Grid>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="Stock Number">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{WPF:ValidatedBinding Value}" HorizontalAlignment="Stretch" BorderThickness="0" 
                                            IsReadOnly="False" Background="WhiteSmoke" ToolTipService.ShowOnDisabled="True" 
                                            ToolTip="{Binding DataContext.UIString[LBL27], FallbackValue='No hand typed values select from Catalog...', RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            IsTabStop="False" IsHitTestVisible="True" Padding="5,0,0,5"/>
                                        <Button Content="{Binding DataContext.UIString[ADSK-ItemTab-04], FallbackValue=Lookup..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                            Command="{Binding DataContext.PsCmd[mItemLookupClick2], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" HorizontalAlignment="Right"
                                            ToolTip="{Binding DataContext.UIString[ADSK-ItemTab-05], FallbackValue=No hand typed values\, select from Catalog..., RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Grid.Column="1" Padding="10,1" MinWidth="100"/>
                                    </Grid>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DynamicDataGridLabelStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
            <Setter Property="Height" Value="Auto" />
            <!--<Setter Property="Margin" Value="0,2,0,0" />-->
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="5,3,3,2" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="1,1,1,0" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="#ff0000" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
                <Trigger Property="Validation.HasError" Value="false">
                    <Setter Property="BorderBrush" Value="#FFABADB3" />
                    <Setter Property="BorderThickness" Value="0,1,1,0" />
                </Trigger>
                <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowColorKey}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Required" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="BorderBrush" Value="Red" />
                    <Setter Property="BorderThickness" Value="1,1,1,1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="24" />
            <Setter Property="Margin" Value="0,0,0,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
            <Setter Property="BorderBrush" Value="#FFABADB3" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Height" Value="22" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="0,15,2,5" />
        </Style>
        <Style x:Key="NumSchmCtrlStyle" TargetType="{x:Type WPF:DSNumSchemeCtrl}">
            <Setter Property="Height" Value="26.0" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="BorderThickness" Value="0,1,1,0" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <Style x:Key="btnScEnabled" TargetType="{x:Type Button}">
            <Setter Property="IsEnabled" Value="True" />
            <Setter Property="ToolTip" Value="{Binding UIString[MSDCE_TT20]}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=txtNewShortCut}" Value="">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ProjectFavorites" TargetType="{x:Type Expander}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CreateMode}" Value="True"/>
                        <Condition Binding="{Binding IsChecked, ElementName=GFN4Special}" Value="False"/>
                        <Condition Binding="{Binding PathAndFileNameHandler.EXT}" Value="IDW"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CreateMode}" Value="True"/>
                        <Condition Binding="{Binding IsChecked, ElementName=GFN4Special}" Value="False"/>
                        <Condition Binding="{Binding PathAndFileNameHandler.EXT}" Value="DWG"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding CreateMode}" Value="True"/>
                        <Condition Binding="{Binding IsChecked, ElementName=GFN4Special}" Value="False"/>
                        <Condition Binding="{Binding PathAndFileNameHandler.EXT}" Value="IPN"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CreateMode}" Value="True">
                    <Setter Property="IsExpanded" Value="False" />
                </DataTrigger>
                <DataTrigger Binding="{Binding HasItems, ElementName=NumSchms}" Value="False">
                    <Setter Property="IsExpanded" Value="True" />
                </DataTrigger>
                <DataTrigger Binding="{Binding EditMode}" Value="True">
                    <Setter Property="IsExpanded" Value="False" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </WPF:DSWindow.Resources>
    <WPF:DSWindow.InputBindings>
        <KeyBinding Key="F1" Command="{Binding PsCmd[mHelp(100)]}"/>
    </WPF:DSWindow.InputBindings>
    <Grid x:Name="grdMain"
          Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" ToolTip="Folder / Project" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" ToolTip="{Binding UIString[LBL73], FallbackValue='General Properties'}" />
            <RowDefinition ToolTip="Resulting Path" Height="Auto" />
            <RowDefinition ToolTip="Buttons" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="203*"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <GroupBox x:Name="GroupFolder" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,0,0,10" BorderThickness="0" 
                  Header="{Binding UIString[LBL1], FallbackValue=Folder}"
                  Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" MaxWidth="680">
            <WrapPanel x:Name="BreadCrumb"  Margin="1,4,0,0">
                <WrapPanel.Resources>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Margin" Value="-1,0,0,0" />
                        <Setter Property="ToolTip" Value="{Binding SelectedValue.Name, RelativeSource={RelativeSource Self}}" />
                        <Setter Property="Width" Value="Auto" />
                        <Setter Property="MinWidth" Value="160" />
                    </Style>
                </WrapPanel.Resources>
            </WrapPanel>

        </GroupBox>
        <Grid x:Name="grdGeneralProps"
        	ToolTip="{Binding UIString[LBL73], FallbackValue=General Properties}" Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="1" MaxWidth="680" Margin="6,10,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="24" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="140" />
                <ColumnDefinition MaxWidth="220" Width="182" />
                <ColumnDefinition Width="140"/>
                <ColumnDefinition MaxWidth="220" MinWidth="180"/>
            </Grid.ColumnDefinitions>
            <Label Content="{Binding UIString[LBL8], FallbackValue=Category}"
        		Grid.Row="0"
        		Grid.Column="0" Height="Auto" BorderThickness="1" />
            <ComboBox x:Name="Categories" Grid.Row="0" Grid.Column="1"
        		DisplayMemberPath="Name"
        		SelectedItem="{Binding DynamicPropertiesCategory}"
        		SelectedValuePath="Name"
        		SelectedValue="{Binding Prop[_Category].Value}"
        		ItemsSource="{Binding PsList[GetCategories], Mode=OneTime}"
        		IsEnabled="{Binding CreateMode}" BorderThickness="0,1,1,1"/>
            <Label
        		Grid.Column="2"
        		Content="{Binding UIString[LBL10], FallbackValue=Number Scheme}"
        		Visibility="{Binding Visibility, ElementName=NumSchms}" BorderThickness="1,1,1,0" Margin="5,0,0,0" />
            <ComboBox x:Name="NumSchms" Grid.Column="3"
        		SelectedIndex="0"
        		DisplayMemberPath="Name"
        		SelectedValuePath="Name"
        		SelectedValue="{Binding Prop[_NumSchm].Value}"
        		ItemsSource="{Binding PsList[GetNumSchms], Mode=OneTime}"
        		IsEnabled="{Binding HasItems, RelativeSource={RelativeSource Self}}"
        		Visibility="{Binding NotEditMode, Converter={StaticResource BooleanToVisibilityConverter}}" BorderThickness="0,1,1,0" />
            <Label Grid.Row="1" Grid.Column="2" Content="{Binding UIString[LBL31], FallbackValue=Number}"
        		Visibility="{Binding Visibility, ElementName=DSNumSchmsCtrl}" Height="Auto" BorderThickness="1" Margin="5,0,0,0" />
            <WPF:DSNumSchemeCtrl x:Name="DSNumSchmsCtrl" Grid.Row="1" Grid.Column="4"
        		Scheme="{Binding SelectedItem, ElementName=NumSchms}"
        		IsEnabled="{Binding IsEnabled, ElementName=NumSchms}"
        		GeneratedNumberProperty="DocNumber"
        		Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}"
        		Style="{StaticResource NumSchmCtrlStyle}" BorderThickness="0,1,1,1" />
        </Grid>
        <TabControl x:Name="tabCtrlMain" Grid.ColumnSpan="2" Grid.Column="1" Margin="6,5,0,0" Grid.Row="2" MinHeight="300" Background="#FFF0F0F0">
            <TabItem x:Name="tabFileProp" Header="{Binding UIString[LBL63], FallbackValue=Category Properties}">
                <Grid x:Name="grdFile" Background="#FFF0F0F0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="DSDynCatPropGrid" MinHeight="300"
                        ToolTip="{Binding UIString[LBL63], FallbackValue=Category Properties}">
                        <DataGrid x:Name="DSDynamicCategoryProperties"
                            AutoGenerateColumns="False"
                            HeadersVisibility="Column"
                            ItemsSource="{Binding DynamicProperties}"
                            ScrollViewer.CanContentScroll="False"
                            HorizontalGridLinesBrush="WhiteSmoke"
                            VerticalGridLinesBrush="WhiteSmoke" Background="White">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding DispName}"
                                    CellStyle="{StaticResource DynamicDataGridLabelStyle}" MinWidth="140"
                                    Width="Auto" IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding DataContext.UIString[LBL64], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                </DataGridTextColumn>
                                <DataGridTemplateColumn Header="Property Value"
                                    CellStyle="{StaticResource DynamicDataGridCellStyle}" Width="*"
                                    MinWidth="180">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding DataContext.UIString[LBL65], RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                    <Expander x:Name="expFilePath" Header="{Binding UIString[LBL6]}"
			ToolTip="{Binding UIString[MSDCE_TT05]}" Style="{StaticResource ExpanderStyle}" Grid.Row="1">
                        <Grid x:Name="grdFilePath" Background="#FFE5E5E5" Margin="0" RenderTransformOrigin="0.5,0.5" ToolTip="{Binding UIString[MSDCE_TT05]}" VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40*"/>
                                <ColumnDefinition Width="169*"/>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lblFileName" Content="{Binding UIString[LBL6], FallbackValue=File Name}" />
                            <TextBox x:Name="FILENAME" Grid.Column="1" 	Style="{StaticResource Required}"
                         Text="{Binding Prop[DocNumber].Value}" IsEnabled="{Binding CreateMode}" IsReadOnly="{Binding EditMode}"
            		Visibility="{Binding NumSchmFieldsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=DSNumSchmsCtrl}"/>
                            <Label x:Name="lblPath" Content="{Binding UIString[LBL5], FallbackValue=Path}" Grid.Row="1" ToolTip="{Binding PathAndFileNameHandler.Path}" BorderThickness="1" />
                            <TextBox x:Name="txtPath" VerticalAlignment="Stretch" Text="{Binding PathAndFileNameHandler.Path}" Grid.Row="1" Grid.Column="1" ToolTip="{Binding PathAndFileNameHandler.Path}" IsReadOnly="True" IsEnabled="False" BorderThickness="0,1,1,1" />
                        </Grid>
                    </Expander>
                    <Grid x:Name="ButtonGrid" VerticalAlignment="Bottom" Style="{StaticResource ResourceKey=ButtonGridStyle}"
              Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="80" />
                        </Grid.ColumnDefinitions>
                        <CheckBox x:Name="GFN4Special" Grid.Column="1" IsEnabled="False" Height="26" VerticalAlignment="Top" Width="26" HorizontalAlignment="Left" Visibility="Collapsed"/>
                        <CheckBox x:Name="IsGFN4Type" Grid.Column="1" VerticalAlignment="Top" IsEnabled="False" Width="26" Height="26" Margin="20,0,0,0" HorizontalAlignment="Left" Visibility="Collapsed"/>
                        <Button Command="{Binding CloseWindowCommand, ElementName=InventorWindow}"
                    IsEnabled="{Binding Properties.IsValid}" Grid.Column="2"
                    Width="80" HorizontalAlignment="Right" VerticalAlignment="Center"
                    ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[LBL35], FallbackValue=Cancel}"
                    Content="{Binding UIString[BTN1], FallbackValue=OK}" Height="24" IsDefault="True" />
                        <Button Grid.Column="4" Width="80" HorizontalAlignment="Right" Height="24"
                    VerticalAlignment="Center" Command="{Binding CancelWindowCommand, ElementName=InventorWindow}"
                    IsCancel="true" Content="{Binding UIString[BTN2], FallbackValue=Cancel}" />
                        <Button x:Name="btnHelp" Content="{Binding UIString[MSDCE_BTN1], FallbackValue=Help}" 
                    Command="{Binding PsCmd[mHelp(100)]}" Height="24" ToolTip="F1" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="tabItemLookup" Header="{Binding UIString[ADSK-ItemTab-00], FallbackValue=Item LookUp}" ToolTip="{Binding UIString[ADSK-ItemTab-01], FallbackValue=Lookup and link Item}" IsTabStop="False">
                <Grid x:Name="grdItemLookup" Height="{Binding ActualHeight, ElementName=grdFile, Mode=OneWay}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="{Binding UIString[], FallbackValue=Filter}"  Grid.Row="0" BorderThickness="0" Margin="-6,0">
                        <Grid Margin="2,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="btnItemCategoryFilterReset" Command="{Binding PsCmd[mResetItemCatFilter]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[MSDCE_TT15]}" Foreground="Red" Width="24" Height="24">
                                <Button.Template>
                                    <ControlTemplate>
                                        <Image Source="C:\ProgramData\Autodesk\Vault 2018\Extensions\DataStandard\Vault\filter-delete.ico" Margin="2" />
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <ComboBox x:Name="cmbItemCategories" 
                                SelectedIndex="0"
                                Grid.Column="1" BorderThickness="1" Margin="5,0,0,0"/>
                        </Grid>
                    </GroupBox>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="SearchText" Grid.Column="0" ToolTip="{Binding UIString[MSDCE_TT30]}" BorderThickness="1"/>
                        <Button x:Name="btnSearchItem" Grid.Column="1" Content="{Binding UIString[MSDCE_BTN5], FallbackValue=Search...}" Command="{Binding PsCmd[mSearchItem]}" CommandParameter="{Binding Text, ElementName=SearchText}" Margin="2,0,0,0" Padding="20,1"/>
                    </Grid>
                    <DataGrid Grid.Row="2" x:Name="ItemsFound" AutoGenerateColumns="True" IsReadOnly="True" ColumnWidth="Auto" HorizontalGridLinesBrush="WhiteSmoke" VerticalGridLinesBrush="WhiteSmoke" Margin="0,2,0,0" AlternationCount="2" AlternatingRowBackground="LightCyan">
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding PsCmd[mSelectItem]}" Header="{Binding UIString[ADSK-ItemTab-02], FallbackValue=Adopt Item Number}" ToolTip="{Binding UIString[MSDCE_TT31]}" CommandParameter="{Binding SelectedIndex, ElementName=ItemsFound}"/>
                                <MenuItem Command="{Binding PsCmd[mSelectStockItem]}" Header="{Binding UIString[ADSK-ItemTab-03], FallbackValue=Adopt Stock Number}" CommandParameter="{Binding SelectedIndex, ElementName=ItemsFound}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                    <TextBlock x:Name="txtBlockNoItemsFound" Text="{Binding UIString[], FallbackValue=No items found. Type * to search for all.}" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,40,0,10" Visibility="Collapsed" />
                </Grid>
            </TabItem>
            <TabItem x:Name="tabTermsCatalog" Header="{Binding UIString[ClassTerms_01], FallbackValue='Terms Catalog'}">
                <Grid x:Name="grdTermCatalog" Grid.ColumnSpan="2" Grid.Column="2" Margin="10,0,0,0" Width="{Binding ActualWidth, ElementName=grdFile, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=grdFile, Mode=OneWay}" MinHeight="500" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition MaxHeight="350"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <GroupBox x:Name="grpClassification" Header="Filter" Grid.Row="0">
                        <Grid x:Name="grdContentFilter">
                            <WrapPanel x:Name="wrpClassification" Grid.Row="2">
                                <Button x:Name="btnClsReset" Command="{Binding PsCmd[mResetClassFilter]}" Content="X" FontWeight="Bold" ToolTip="{Binding UIString[MSDCE_TT15]}" Foreground="Red" Width="24" Height="24">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Image Source="C:\ProgramData\Autodesk\Vault 2018\Extensions\DataStandard\Vault\filter-delete.ico" Margin="2" />
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                            </WrapPanel>
                        </Grid>
                    </GroupBox>
                    <GroupBox x:Name="grpLanguages" Header="Sprachen" Grid.Row="1">
                        <Grid x:Name="grdLanguages" Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <CheckBox x:Name="chkDE" Content="{Binding UIString[ClassTerms_02], FallbackValue=German}" IsChecked="True"/>
                            <CheckBox x:Name="chkEN" Content="{Binding UIString[ClassTerms_03], FallbackValue=English}" Grid.Column="1" IsChecked="True"/>
                            <CheckBox x:Name="chkFR" Content="{Binding UIString[ClassTerms_04], FallbackValue=French}" Grid.Column="2" IsChecked="True"/>
                            <CheckBox x:Name="chkIT" Content="{Binding UIString[ClassTerms_05], FallbackValue=Italian}" Grid.Column="3" IsChecked="True"/>
                        </Grid>
                    </GroupBox>
                    <Grid x:Name="grdTermSearch" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="100"/>
                        </Grid.ColumnDefinitions>
                        <TextBox x:Name="mSearchTermText" Grid.Column="0" ToolTip="{Binding UIString[MSDCE_TT30]}" VerticalAlignment="Top" Height="30" BorderThickness="1,1,1,0"/>
                        <Button x:Name="btnSearchTerm" Grid.Column="1" Content="{Binding UIString[MSDCE_BTN5], FallbackValue=Search...}" Command="{Binding PsCmd[mSearchTerm]}"/>
                    </Grid>
                    <DataGrid x:Name="dataGrdTermsFound" AutoGenerateColumns="False" IsTabStop="False" IsReadOnly="True" ColumnWidth="*" 
                          HorizontalGridLinesBrush="WhiteSmoke" VerticalGridLinesBrush="WhiteSmoke" ColumnHeaderHeight="26" 
                          AlternatingRowBackground="LightCyan" Background="White" Cursor="Hand" ClipboardCopyMode="IncludeHeader" 
                          Focusable="False" VerticalScrollBarVisibility="Visible" Grid.Row="3" RowHeight="24">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Term_DE}" Width="*" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_02], FallbackValue=German, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Term_EN}" Width="*" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_03], FallbackValue=English, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Term_FR}" Width="*" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_04], FallbackValue=French, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Term_IT}" Width="*" MinWidth="140">
                                <DataGridTextColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding DataContext.UIString[ClassTerms_05], FallbackValue=Italian, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </DataTemplate>
                                </DataGridTextColumn.HeaderTemplate>
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding PsCmd[m_SelectTerm]}" Header="{Binding UIString[ClassTerms_BTN9], FallbackValue=Insert in Title Field}" ToolTip="{Binding UIString[ClassTerms_TT00]}" CommandParameter="{Binding SelectedIndex, ElementName=dataGrdTermsFound}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                    <TextBox x:Name="txtNoTermFound" Grid.Row="3" TextWrapping="Wrap" Text="{Binding UIString[ClassTerms_06], FallbackValue=No Term(s) found...}" HorizontalContentAlignment="Center" BorderBrush="#FFE5E5E5" VerticalAlignment="Top" BorderThickness="0" Visibility="Collapsed" Margin="0,30,0,0" HorizontalAlignment="Center"/>
                    <Grid x:Name="grdButtons" Grid.Row="4" Margin="0,10">
                        <Button x:Name="btnAdopt" Command="{Binding PsCmd[m_SelectTerm]}" 
                            Content="{Binding UIString[ClassTerms_BTN10], FallbackValue=Adopt}"                             
                            HorizontalAlignment="Right" Width="140" IsEnabled="False" Height="24" 
                            ToolTip="{Binding UIString[ClassTerms_TT00]}"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Werksnormen" Height="26" IsTabStop="False">
                <Grid x:Name="grdCompStandard"  Height="{Binding ActualHeight, ElementName=grdFile, Mode=OneWay}" >
                    <DataGrid x:Name="dbGridSQL" >
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding PsCmd[mSelectWNItem]}" Header="Werksnorm übernehmen" CommandParameter="{Binding SelectedIndex, ElementName=dbGridSQL}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                </Grid>
            </TabItem>

            <TabItem Header="{Binding UIString[], FallbackValue='ERP Info'}">
                <Grid x:Name="grdERPInfo"  Height="{Binding ActualHeight, ElementName=grdFile, Mode=OneWay}"/>
            </TabItem>
        </TabControl>
        <Expander x:Name="expShortCutPane" Header="" Grid.RowSpan="5" ExpandDirection="Left" IsExpanded="True"
        	Style="{StaticResource ProjectFavorites}" ToolTip="{Binding UIString[MSDCE_TT24]}" Background="#FFF0F0F0">
            <GroupBox x:Name="GroupShortcuts" Header="{Binding UIString[MSDCE_LBL88], FallbackValue=Shortcuts}" BorderThickness="0">
                <Grid Background="#FFF0F0F0" Width="180">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="txtNewShortCut" Grid.Row="0" ToolTip="{Binding UIString[MSDCE_TT20]}" BorderThickness="1" />
                    <Button x:Name="btnNewSc" Content="ü" Grid.Column="1" Grid.Row="0" Width="24" Height="24" FontFamily="Wingdings"
        				FontSize="14" Foreground="#FF2FAE09" VerticalContentAlignment="Bottom" Margin="2,2,0,2" FontWeight="Bold" Cursor="Hand"
        				ToolTipService.ShowOnDisabled="True" ToolTip="{Binding UIString[MSDCE_TT20]}"
        				Style="{StaticResource btnScEnabled}"
        				Command="{Binding PsCmd[mAddSc]}"/>
                    <ListBox x:Name="lstBoxShortCuts" Grid.Row="1" MinWidth="180" Margin="0" ToolTip="{Binding UIString[MSDCE_TT23]}" ItemsSource="{Binding PsList[mReadShortCuts]}" MaxWidth="300" MaxHeight="500" Grid.ColumnSpan="2">
                        <ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{Binding UIString[MSDCE_BTN2], FallbackValue=Activate}" Command="{Binding PsCmd[mScClick]}"/>
                                <MenuItem Header="{Binding UIString[MSDCE_BTN3], FallbackValue=Activate}" Command="{Binding PsCmd[mRemoveSc]}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                    </ListBox>
                    <Border BorderBrush="#FFABADB3" Grid.Row="2"
        				Visibility="{Binding CopyMode, Converter={StaticResource BooleanToVisibilityConverter}}" Grid.ColumnSpan="2" MaxWidth="180" Margin="0,5,0,0" BorderThickness="0">
                        <Image Source="{Binding Prop[Thumbnail].Value}" Stretch="UniformToFill" />
                    </Border>
                </Grid>
            </GroupBox>
        </Expander>

    </Grid>
</WPF:DSWindow>